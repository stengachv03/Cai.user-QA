import logging
import os
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞ (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è)
BOT_TOKEN = os.getenv('BOT_TOKEN', '7607974434:AAHUdxPeuP4agNFMnwT-s-WmzCs3boMlAQY')

# ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏ —Å–æ–∑–¥–∞—Ç–µ–ª—è (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ user_id, usernames –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏)
# –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å user_id, –±–æ—Ç –¥–æ–ª–∂–µ–Ω –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥—Ä—É–≥–∏–µ –º–µ—Ç–æ–¥—ã
ADMIN_ID = 217784938  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π user_id @sten_anyqx
CREATOR_ID = 897127957  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π user_id @vl_std

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π FSM
class AdvertisingState(StatesGroup):
    waiting = State()  # –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –∑–∞–∫–∞–∑–∞ —Ä–µ–∫–ª–∞–º—ã

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=BOT_TOKEN)
storage = MemoryStorage()
dp = Dispatcher(storage=storage)

# –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(Command('start'))
async def start_handler(message: types.Message, state: FSMContext):
    # –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
    await state.clear()
    
    # –°–æ–∑–¥–∞–Ω–∏–µ inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å üí∏", callback_data="support")],
        [InlineKeyboardButton(text="–°–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ ü§ù", callback_data="cooperation")]
    ])
    
    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! üòä –í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:", reply_markup=keyboard)

# –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è inline-–∫–Ω–æ–ø–æ–∫
@dp.callback_query()
async def callback_handler(callback: types.CallbackQuery, state: FSMContext):
    if callback.data == "support":
        await callback.message.answer("–í—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –Ω–∞—Å, –æ—Ç–ø—Ä–∞–≤–∏–≤ USDT –Ω–∞ –∞–¥—Ä–µ—Å: TVkXgDHJsMQcR14Mr6uPdpELqJuG6Aok5L —á–µ—Ä–µ–∑ —Å–µ—Ç—å TRC20. üôå")
    
    elif callback.data == "cooperation":
        text = (
            "–ê–≤—Ç–æ—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –ø–æ —Ç–µ–º–∞–º: —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ ü§ù\n"
            "–°–ø–∏—Å–æ–∫ –ø—Ä–∞–π—Å–∞:\n"
            "1. –í–∞—à –ø–æ—Å—Ç –≤ –æ–¥–Ω–æ–º –∏–∑ —Ç–≥ –∫–∞–Ω–∞–ª–æ–≤ @characterhh –∏–ª–∏ @janitorai6 - 10$ üì¢\n"
            "2. –ú–æ–π –æ–±–∑–æ—Ä –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏—è –ø–æ—Å—Ç–∞ –æ –í–∞—à–µ–º –ø—Ä–æ–¥—É–∫—Ç–µ/–∫–∞–Ω–∞–ª–µ/–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –≤ –æ–¥–Ω–æ–º –∏–∑ –º–æ–∏—Ö –∫–∞–Ω–∞–ª–æ–≤ - 30$ üìù\n"
            "3. –ö–æ—Ä–æ—Ç–∫–∏–π —Ä–æ–ª–∏–∫ –¥–æ 10 —Å–µ–∫—É–Ω–¥ –æ –í–∞—à–µ–º –ø—Ä–æ–¥—É–∫—Ç–µ –Ω–∞ —Ç–∏–∫ —Ç–æ–∫ –∞–∫–∫–∞—É–Ω—Ç - 50$ üé•\n"
            "4. –†–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–π —Ä–µ–∫–ª–∞–º–Ω—ã–π —Ä–æ–ª–∏–∫ –æ—Ç–∑—ã–≤ –æ –í–∞—à–µ–º –ø—Ä–æ–¥—É–∫—Ç–µ - 99$ üéôÔ∏è\n"
            "\n"
            "–í—Å–µ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –∏ –Ω—é–∞–Ω—Å—ã –æ–±—Å—É–∂–¥–∞—é—Ç—Å—è –ª–∏—á–Ω–æ. üòä"
        )
        # –ö–Ω–æ–ø–∫–∞ "–•–æ—á—É –∑–∞–∫–∞–∑–∞—Ç—å —Ä–µ–∫–ª–∞–º—É"
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="–•–æ—á—É –∑–∞–∫–∞–∑–∞—Ç—å —Ä–µ–∫–ª–∞–º—É üöÄ", callback_data="order_ad")]
        ])
        await callback.message.answer(text, reply_markup=keyboard)
    
    elif callback.data == "order_ad":
        await callback.message.answer("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! üòä –ú—ã —Ä–∞–¥—ã —Å–æ—Ç—Ä—É–¥–Ω–∏—á–∞—Ç—å —Å –í–∞–º–∏. –°–ª—É—à–∞–µ–º –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –í–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ! üéâ")
        # –í—Ö–æ–¥ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–∫–∞–∑–∞ —Ä–µ–∫–ª–∞–º—ã
        await state.set_state(AdvertisingState.waiting)
    
    await callback.answer()  # –ó–∞–∫—Ä—ã—Ç—å callback

# –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /stop (–≤—ã—Ö–æ–¥ –∏–∑ —Ä–µ–∂–∏–º–∞)
@dp.message(Command('stop'))
async def stop_handler(message: types.Message, state: FSMContext):
    current_state = await state.get_state()
    if current_state == AdvertisingState.waiting:
        await state.clear()
        await message.answer("–í—ã –≤—ã—à–ª–∏ –∏–∑ —Ä–µ–∂–∏–º–∞ –∑–∞–∫–∞–∑–∞ —Ä–µ–∫–ª–∞–º—ã. üòå")
    else:
        await message.answer("–í—ã –Ω–µ –≤ —Ä–µ–∂–∏–º–µ –∑–∞–∫–∞–∑–∞ —Ä–µ–∫–ª–∞–º—ã. ü§î")

# –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (—Ç–µ–∫—Å—Ç, —Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ)
@dp.message()
async def message_handler(message: types.Message, state: FSMContext):
    current_state = await state.get_state()
    sender_username = message.from_user.username or f"ID_{message.from_user.id}"
    target_id = CREATOR_ID if current_state == AdvertisingState.waiting else ADMIN_ID
    
    try:
        # –ü–µ—Ä–µ—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
        await bot.forward_message(
            chat_id=target_id,
            from_chat_id=message.chat.id,
            message_id=message.message_id
        )
        # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ–π –ø–µ—Ä–µ—Å—ã–ª–∫–∏
        logger.info(f"Message from @{sender_username} forwarded to {target_id}")
    except Exception as e:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –Ω–µ—Ç –ø—Ä–∞–≤ –∏–ª–∏ —á–∞—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω)
        logger.error(f"Error forwarding message from @{sender_username} to {target_id}: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è. üòî –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot)

if __name__ == '__main__':
    import asyncio
    asyncio.run(main())
