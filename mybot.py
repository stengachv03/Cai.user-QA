import os
import telebot
from telebot.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton

TOKEN = os.getenv('BOT_TOKEN')
if not TOKEN:
    raise ValueError("No BOT_TOKEN environment variable set")

# Replace with actual chat IDs
ADMIN_CHAT_ID = 123456789  # Chat ID for @sten_anyqx (get it by sending a message to the bot and checking update)
CREATOR_CHAT_ID = 987654321  # Chat ID for @vl_std (same as above)

WALLET_ADDRESS = 'TVkXgDHJsMQcR14Mr6uPdpELqJuG6Aok5L'
NETWORK = 'TRC20'

bot = telebot.TeleBot(TOKEN)

# Dictionary to track user states
user_states = {}

@bot.message_handler(commands=['start'])
def send_welcome(message):
    welcome_text = (
        "–ü—Ä–∏–≤–µ—Ç!\n\n"
        "–•–æ—á–µ—à—å –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å? –£ —Ç–µ–±—è –µ—Å—Ç—å –∏–¥–µ—è –¥–ª—è –ø–æ—Å—Ç–∞/–≤–∏–¥–µ–æ? –•–æ—á–µ—à—å –æ–±–≥–∞—Ä–Ω–∏—Ç—Å—è —Å —Ä–µ–∫–ª–∞–º–æ–π?\n"
        "–ò–ª–∏ —Ç—ã —Ö–æ—á–µ—à—å –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å —Å–æ–æ–±—â–µ—Å—Ç–≤–æ–º –∫—Ä—É—Ç—ã–º –ø—Ä–æ –ò–ò –±–æ—Ç–æ–≤?\n"
        "–ü–∏—à–∏ –º–Ω–µ —Å–º–µ–ª–æ üòä\n\n"
        "–Ø —á–∏—Ç–∞—é –≤—Å—ë —Å —Ç–µ–ø–ª–æ–º –∏ –≤–Ω–∏–º–∞–Ω–∏–µ–º üíú"
    )
    
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(KeyboardButton("–°–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ"))
    markup.add(KeyboardButton("–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å"))
    
    bot.send_message(message.chat.id, welcome_text, reply_markup=markup)

@bot.message_handler(func=lambda message: message.text == "–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å")
def handle_support(message):
    support_text = (
        f"–ü–æ–¥–¥–µ—Ä–∂–∏—Ç–µ –Ω–∞—Å —á–µ—Ä–µ–∑ USDT via —Å–µ—Ç—å {NETWORK}:\n"
        f"{WALLET_ADDRESS}\n\n"
        "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –ø–æ–¥–¥–µ—Ä–∂–∫—É! üòä"
    )
    bot.send_message(message.chat.id, support_text)

@bot.message_handler(func=lambda message: message.text == "–°–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ")
def handle_cooperation(message):
    price_list = (
        "–ê–≤—Ç–æ—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –ø–æ —Ç–µ–º–∞–º: —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ.\n\n"
        "–°–ø–∏—Å–æ–∫ –ø—Ä–∞–π—Å–∞:\n"
        "1. –í–∞—à –ø–æ—Å—Ç –≤ –æ–¥–Ω–æ–º –∏–∑ —Ç–≥ –∫–∞–Ω–∞–ª–æ–≤ @characterhh –∏–ª–∏ @janitorai6 - 10$\n"
        "2. –ú–æ–π –æ–±–∑–æ—Ä –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏—è –ø–æ—Å—Ç–∞ –æ –í–∞—à–µ–º –ø—Ä–æ–¥—É–∫—Ç–µ/–∫–∞–Ω–∞–ª–µ/–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –≤ –æ–¥–Ω–æ–º –∏–∑ –º–æ–∏—Ö –∫–∞–Ω–∞–ª–æ–≤ - 30$\n"
        "3. –ö–æ—Ä–æ—Ç–∫–∏–π —Ä–æ–ª–∏–∫ –¥–æ 10 —Å–µ–∫—É–Ω–¥ –æ –í–∞—à–µ–º –ø—Ä–æ–¥—É–∫—Ç–µ –Ω–∞ —Ç–∏–∫ —Ç–æ–∫ –∞–∫–∫–∞—É–Ω—Ç - 50$\n"
        "4. –†–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–π —Ä–µ–∫–ª–∞–º–Ω—ã–π —Ä–æ–ª–∏–∫ –æ—Ç–∑—ã–≤ –æ –í–∞—à–µ–º –ø—Ä–æ–¥—É–∫—Ç–µ - 99$\n\n"
        "–í—Å–µ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –∏ –Ω—é–∞–Ω—Å—ã –æ–±—Å—É–∂–¥–∞—é—Ç—Å—è –ª–∏—á–Ω–æ."
    )
    
    inline_markup = InlineKeyboardMarkup()
    inline_markup.add(InlineKeyboardButton("–•–æ—á—É –∑–∞–∫–∞–∑–∞—Ç—å —Ä–µ–∫–ª–∞–º—É", callback_data="order_ad"))
    
    bot.send_message(message.chat.id, price_list, reply_markup=inline_markup)

@bot.callback_query_handler(func=lambda call: call.data == "order_ad")
def handle_order_ad(call):
    bot.answer_callback_query(call.id)
    greeting = "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ú—ã —Ä–∞–¥—ã —Å–æ—Ç—Ä—É–¥–Ω–∏—á–∞—Ç—å —Å –í–∞–º–∏. –°–ª—É—à–∞–µ–º –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –í–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ."
    bot.send_message(call.message.chat.id, greeting)
    
    # Set state to wait for proposal
    user_states[call.from_user.id] = 'waiting_proposal'

@bot.message_handler(func=lambda message: True)
def handle_message(message):
    user_id = message.from_user.id
    if user_id in user_states and user_states[user_id] == 'waiting_proposal':
        # Forward to creator
        bot.forward_message(CREATOR_CHAT_ID, message.chat.id, message.message_id)
        bot.send_message(message.chat.id, "–í–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–µ—Ä–µ–¥–∞–Ω–æ. –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏!")
        del user_states[user_id]
    elif message.text not in ["–°–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ", "–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å"]:
        # Forward to admin
        bot.forward_message(ADMIN_CHAT_ID, message.chat.id, message.message_id)
        bot.send_message(message.chat.id, "–°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∏–¥–µ—è –ø–µ—Ä–µ–¥–∞–Ω–∞. –û—Ç–≤–µ—á—É, –µ—Å–ª–∏ –∞–¥–º–∏–Ω –∑–∞—Ö–æ—á–µ—Ç –æ—Ç–≤–µ—Ç–∏—Ç—å.")

if __name__ == '__main__':
    try:
        bot.polling(none_stop=True)
    except Exception as e:
        print(f"Error: {e}")
        raise
